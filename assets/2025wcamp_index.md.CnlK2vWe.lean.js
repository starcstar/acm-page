import{_ as r,C as a,c as d,o as s,j as t,a as n,G as e}from"./chunks/framework.CkHWihve.js";const S=JSON.parse('{"title":"2025 寒假线上培训","description":"","frontmatter":{},"headers":[],"relativePath":"2025wcamp/index.md","filePath":"2025wcamp/index.md","lastUpdated":1739779526000}'),o={name:"2025wcamp/index.md"},p={id:"第一讲-字符串算法与哈希技巧",tabindex:"-1"},u={id:"第二讲-图与树的基本概念",tabindex:"-1"},x={id:"第三讲-图上的遍历算法",tabindex:"-1"},b={id:"第四讲-区间查询与更新问题",tabindex:"-1"},m={id:"第五讲-最短路径问题",tabindex:"-1"},f={id:"第六讲-最小生成树问题",tabindex:"-1"};function F(P,l,y,k,B,O){const i=a("Badge");return s(),d("div",null,[l[18]||(l[18]=t("h1",{id:"_2025-寒假线上培训",tabindex:"-1"},[n("2025 寒假线上培训 "),t("a",{class:"header-anchor",href:"#_2025-寒假线上培训","aria-label":'Permalink to "2025 寒假线上培训"'},"​")],-1)),t("h2",p,[l[0]||(l[0]=n("第一讲：字符串算法与哈希技巧 ")),e(i,{type:"tip",text:"@Online Feb 7 19:00-20:00"}),l[1]||(l[1]=n()),l[2]||(l[2]=t("a",{class:"header-anchor",href:"#第一讲-字符串算法与哈希技巧","aria-label":'Permalink to "第一讲：字符串算法与哈希技巧 <Badge type="tip" text="@Online Feb 7 19:00-20:00" />"'},"​",-1))]),l[19]||(l[19]=t("p",null,[n("讲义链接："),t("a",{href:"./day1/"},"字符串算法与哈希技巧")],-1)),l[20]||(l[20]=t("p",null,[n("幻灯片PDF："),t("a",{href:"./day1/slide.pdf"},"字符串算法与哈希技巧")],-1)),l[21]||(l[21]=t("ol",null,[t("li",null,"字符串哈希与快速匹配：介绍字符串哈希的原理、常见哈希函数以及应用场景，例如字符串匹配、最长回文子串等。"),t("li",null,"KMP算法与高效字符串匹配：讲解KMP算法的原理、next数组的求解以及代码实现，分析其时间复杂度。")],-1)),t("h2",u,[l[3]||(l[3]=n("第二讲：图与树的基本概念 ")),e(i,{type:"tip",text:"@Online Feb 9 19:00-20:00"}),l[4]||(l[4]=n()),l[5]||(l[5]=t("a",{class:"header-anchor",href:"#第二讲-图与树的基本概念","aria-label":'Permalink to "第二讲：图与树的基本概念 <Badge type="tip" text="@Online Feb 9 19:00-20:00" />"'},"​",-1))]),l[22]||(l[22]=t("ol",null,[t("li",null,"介绍图的基本概念（有向图、无向图、权重图等）。讲解图的常见存储方式（邻接矩阵、邻接表）。"),t("li",null,"介绍树的性质（连通无环图、根树、子树等）。讲解树的遍历算法（前序遍历、中序遍历、后序遍历、层序遍历）。")],-1)),t("h2",x,[l[6]||(l[6]=n("第三讲：图上的遍历算法 ")),e(i,{type:"tip",text:"@Online Feb 11 19:00-20:00"}),l[7]||(l[7]=n()),l[8]||(l[8]=t("a",{class:"header-anchor",href:"#第三讲-图上的遍历算法","aria-label":'Permalink to "第三讲：图上的遍历算法 <Badge type="tip" text="@Online Feb 11 19:00-20:00" />"'},"​",-1))]),l[23]||(l[23]=t("p",null,[n("讲义链接："),t("a",{href:"./day3/"},"图上的遍历算法")],-1)),l[24]||(l[24]=t("ol",null,[t("li",null,[t("strong",null,"广度优先搜索 (BFS)"),n("： 讲解BFS算法的原理、实现方法（队列实现）。应用场景：无权图中的单源最短路径问题、连通分量问题等。")]),t("li",null,[t("strong",null,"深度优先搜索 (DFS)"),n("：讲解DFS算法的原理、实现方法（递归或栈实现）。 应用场景：图的拓扑排序、强连通分量、环检测等。")])],-1)),t("h2",b,[l[9]||(l[9]=n("第四讲：区间查询与更新问题 ")),e(i,{type:"tip",text:"@Online Feb 13 19:00-20:00"}),l[10]||(l[10]=n()),l[11]||(l[11]=t("a",{class:"header-anchor",href:"#第四讲-区间查询与更新问题","aria-label":'Permalink to "第四讲：区间查询与更新问题 <Badge type="tip" text="@Online Feb 13 19:00-20:00" />"'},"​",-1))]),l[25]||(l[25]=t("p",null,[n("讲义链接："),t("a",{href:"./day4/"},"区间查询与更新问题")],-1)),l[26]||(l[26]=t("ol",null,[t("li",null,"树状数组与单点更新区间查询：介绍树状数组的原理、操作以及应用场景，例如求解逆序对、区间和等。"),t("li",null,"线段树与区间更新区间查询：讲解线段树的原理、操作以及应用场景，例如求解区间最大值、区间最小值等。"),t("li",null,"树状数组与线段树的比较：分析树状数组和线段树的优缺点，以及各自适用的场景。")],-1)),t("h2",m,[l[12]||(l[12]=n("第五讲：最短路径问题 ")),e(i,{type:"tip",text:"@Online Feb 15 19:00-20:00"}),l[13]||(l[13]=n()),l[14]||(l[14]=t("a",{class:"header-anchor",href:"#第五讲-最短路径问题","aria-label":'Permalink to "第五讲：最短路径问题 <Badge type="tip" text="@Online Feb 15 19:00-20:00" />"'},"​",-1))]),l[27]||(l[27]=t("p",null,[n("讲义链接："),t("a",{href:"./day5/"},"最短路径问题")],-1)),l[28]||(l[28]=t("ol",null,[t("li",null,"Dijkstra算法与单源最短路径：讲解Dijkstra算法的原理、实现方法（优先队列优化）以及应用场景，例如求解非负权图中的单源最短路径问题。"),t("li",null,"SPFA算法与负权边处理：介绍SPFA算法的原理、实现方法以及应用场景，例如求解存在负权边情况下的单源最短路径问题。"),t("li",null,"Dijkstra算法与SPFA算法的比较：分析Dijkstra算法和SPFA算法的优缺点，以及各自适用的场景。")],-1)),t("h2",f,[l[15]||(l[15]=n("第六讲：最小生成树问题 ")),e(i,{type:"tip",text:"@Online Feb 17 19:00-20:00"}),l[16]||(l[16]=n()),l[17]||(l[17]=t("a",{class:"header-anchor",href:"#第六讲-最小生成树问题","aria-label":'Permalink to "第六讲：最小生成树问题 <Badge type="tip" text="@Online Feb 17 19:00-20:00" />"'},"​",-1))]),l[29]||(l[29]=t("p",null,[n("讲义链接："),t("a",{href:"./day6/"},"最小生成树问题")],-1)),l[30]||(l[30]=t("ol",null,[t("li",null,"并查集：讲解并查集的原理"),t("li",null,"Kruskal算法与贪心策略：讲解Kruskal算法的原理、实现方法（并查集优化）以及应用场景，例如求解最小生成树问题。"),t("li",null,"Prim算法与优先队列：介绍Prim算法的原理、实现方法（优先队列优化）以及应用场景，例如求解最小生成树问题。"),t("li",null,"Kruskal算法与Prim算法的比较：分析Kruskal算法和Prim算法的优缺点，以及各自适用的场景。")],-1))])}const D=r(o,[["render",F]]);export{S as __pageData,D as default};
